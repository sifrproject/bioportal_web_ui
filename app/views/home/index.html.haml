- @title = "Welcome to the #{$ORG_SITE}"

:css
  .greyed{
    color:#CFCFCF;
  }
#social_networking{:style => "position: absolute; right: 7px; padding-top: 4px;"}
  %div{:style => "float:right;", :title => "Cite BioPortal"}
    %a.pop_window.help_link{:href => "/help#How_to_cite_NCBO_and_BioPortal", :target => "_blank"}
      %span.ui-icon.ui-icon-note
    %a.pop_window{:href => "/help#How_to_cite_NCBO_and_BioPortal", :target => "_blank"}
      Cite Us
  %div{:style => "float:right;"}= t('home.facebook_button').html_safe
  %div{:style => "float:right;"}= t('home.twitter_button').html_safe
- unless $FRONT_NOTICE.nil? || $FRONT_NOTICE.empty? || cookies[:front_page_notice_closed].eql?("true")
  :javascript
    function close_message(){
      var exdate = new Date();
      exdate.setDate(exdate.getDate() + 7);
      document.cookie="front_page_notice_closed=true; expires="+exdate.toGMTString();
      jQuery("#notice_message").hide();
    }
    %p#notice_message{:style => "padding: 10px; margin: 10px; border:1px solid #EFEFEF; background-color: #F9F9F9;"}
    = $FRONT_NOTICE
    \&nbsp;&nbsp;
    %a{:href => "#", :onclick => "close_message(); return false;", :style => "font-size: small; color: darkGray;"} [close]
#release_info{style: "position: absolute; right: 7px; padding-top: 38px; font-size: 1.3em;"}
  Current Release: 
  = link_to $RELEASE_VERSION, "http://www.bioontology.org/wiki/index.php/BioPortal_Release_Notes", target: "_blank"
%div{:style => "padding:10px;margin:10px;"}
  - bp_welcome = "<p><span style='font-size:1.75em; font-weight:bold;'>Welcome to #{$SITE}</span><span style='font-size:1.6em'>, the world&rsquo;s most comprehensive repository of biomedical ontologies.</span></p>"
  - help = "<p style='font-size:1.3em'>For help using #{$SITE}, click on this icon: #{help_icon('/help#Home_Page')}</p>"
  = t('home.intro').html_safe.nil? || t('home.intro').html_safe.empty? ? bp_welcome.html_safe + help.html_safe : t('home.intro').html_safe
%div
  %table{:width => "100%"}
    %tr
      %td{:valign => "top", :width => "33%"}
        = form_for(:search, :url => {:controller =>'search', :action=>'index'}, :html => { :method => :get }) do |f|
          %fieldset
            %legend Search all ontologies
            %table
              %tr
                %td{:nowrap => ""}
                  %input.greyed{:name => "query", :onclick => "greybox(this)", :size => "30", :style => "width:190px;", :type => "text", :value => "Enter concept, e.g. Melanoma"}/
                  = submit_tag 'Search',:class=>'home_button'
              %tr
                %td{:style => "padding-left:15px"}
                  %a{:href => "/search?opt=advanced"} Advanced Search
      %td{:valign => "top", :width => "33%"}
        %fieldset
          %legend Find an ontology
          %table
            %tr
              %td{:nowrap => ""}
                %input#find_ontology.home_input.greyed{:name => "ontology", :onclick => "greybox(this)", :size => "30", :style => "width:240px;", :type => "text", :value => "Enter ontology name, e.g. NCI Thesaurus"}/
                %input.home_button{:onclick => "jumpToValueOntology()", :type => "button", :value => "Explore"}/
                %input#find_ontology_id{:type => "hidden"}/
            - if at_slice?
              %tr
                %td &nbsp;
            - else
              %tr
                %td{:style => "padding-left:15px;height:10px;"}
                  %ul.sf-menu.sf-vertical
                    %li
                      %a{:href => "#", :style => "white-space:nowrap;background:#fff;border:1px solid #fff;text-decoration:underline;padding:0px;"} Browse Ontologies >
                      %ul
                        %li
                          %a{:href => "/ontologies"} All
                        - @groups.to_a.each do |group|
                          %li
                            %a{:href => "/ontologies?filter=#{CGI.escape(group[:acronym])}"}= group[:name]
      %td{:valign => "top", :width => "33%"}
        %fieldset
          %legend Search resources
          %table
            %tr
              %td{:nowrap => ""}
                %input#find_resource.greyed{:onclick => "greybox(this)", :size => "30", :style => "width:240px;", :type => "text", :value => "Enter a concept, e.g. Melanoma"}/
                %input.home_button{:onclick => "jumpToValueResource()", :type => "button", :value => "Search"}/
            %tr
              %td{:style => "padding-left:15px"}
                %a{:href => "/resource_index"} Advanced Resource Search
    %tr
      %td{:valign => "top"}
        %fieldset
          %legend
            Ontology Visits #{"in full #{$SITE} " if at_slice?} (#{@analytics.date.strftime("%B %Y")})
          %table.minimal.align-right{width: "100%"}
            %tbody
              -@analytics.onts[0..4].each do |visits|
                -ont = @ontologies_hash[visits[:ont].to_s]
                -next if ont.nil?
                %tr
                  %td
                    %a{href: "/ontologies/#{ont.acronym}"} #{ont.name} (#{ont.acronym})
                  %td= visits[:views]
              %tr
                %td{colspan: 2, style: "text-align: right;"}
                  %a#ont_view_popup{href: "#ont_views", rel: "facebox"} More
                  :javascript
                    jQuery(document).ready(function(){
                      jQuery("#ont_view_popup").facebox();
                    });
          :css
            #bd #ont_views {
              left: -99999px;
              position: absolute;
            }
          %div#ont_views
            %h2 Visits for #{@analytics.date.strftime("%B %Y")}
            %table.minimal.align-right{width: "800px"}
              %tbody
                - count = 0
                - @analytics.onts.each do |visits|
                  - ont = @ontologies_hash[visits[:ont].to_s]
                  - next if ont.nil?
                  - count += 1
                  %tr
                    %td
                      #{count}.
                      %a{href: "/ontologies/#{ont.acronym}"} #{ont.name} (#{ont.acronym})
                    %td= visits[:views]

        - if t('stats').html_safe.nil? || t('stats').html_safe.empty?
          %fieldset
            %legend
              Statistics #{"in full #{$SITE}" if at_slice?}
            %table.minimal.align-right{:width => "100%"}
              %tbody
                %tr
                  %td Ontologies
                  %td= @ont_count
                %tr
                  %td Classes
                  %td= number_with_delimiter(@cls_count, :delimiter => ",")
                %tr
                  %td Projects
                  %td= LinkedData::Client::Models::Project.all.length
                %tr
                  %td Users
                  %td= LinkedData::Client::Models::User.all.length
        - else
          %fieldset
            = t('stats').html_safe
      %td{:valign => "top"}
        %fieldset
          %legend Latest Notes
          %table.minimal{:style => "width:100%"}
            %tbody
              - if @last_notes.nil? || @last_notes.empty?
                No recent notes have been submitted
              - else
                - for note in @last_notes
                  %tr
                    %td
                      - begin
                        = link_to "#{note[:subject]} (#{note[:ont_name]})", note_path(CGI.escape(note[:id]))
                        %br/
                        %span{:style => "color:#AAAAAA"}
                          = "#{time_ago_in_words(note[:created])} ago"
                          by #{note[:author]}
                        - if note[:body]
                          %p
                            = truncate(strip_tags(note[:body]), :length => 100)
                            \&nbsp;
                      - rescue
      %td{:valign => "top"}
        - if $DISPLAY_RECENT.nil? || $DISPLAY_RECENT == true
          %fieldset
            %legend Latest Mappings
            %table.minimal{:style => "width:100%"}
              %tbody
                - mappings = @recent_mappings[:mappings]
                - if mappings.nil? || mappings.empty?
                  No recent mappings have been submitted
                - else
                  - good_count = 0
                  - for map in mappings
                    - break if good_count == 5
                    - begin
                      - mapProc = map.process
                      - raise "UI-view error for recent mapping process #{map.process}" if mapProc.nil?
                      - # map.classes might contain more than two items, use first and last.
                      - clsA = map.classes.first
                      - clsB = map.classes.last
                      - next unless clsA.prefLabel && clsB.prefLabel
                      - raise "UI-view error for recent mapping class #{map.classes.first.id}" if clsA.nil?
                      - raise "UI-view error for recent mapping class #{map.classes.last.id}" if clsB.nil?
                      - if map.process.name == "REST Mapping"
                        - ontA = clsA.explore.ontology
                        - ontB = clsB.explore.ontology
                        - raise "UI-view error for recent mapping ontology #{clsA[:ontology]}" if ontA.nil?
                        - raise "UI-view error for recent mapping ontology #{clsB[:ontology]}" if ontB.nil?
                        - ontAcroA = ontA.acronym
                        - ontAcroB = ontB.acronym
                      - elsif map.process.name.start_with? "Interportal Mapping"
                        - ontA = clsA.explore.ontology
                        - raise "UI-view error for recent mapping ontology #{clsA[:ontology]}" if ontA.nil?
                        - ontAcroA = ontA.acronym
                        - ontAcroB = clsB["links"]["ontology"]
                      - elsif map.process.name == "External Mapping"
                        - ontA = clsA.explore.ontology
                        - raise "UI-view error for recent mapping ontology #{clsA[:ontology]}" if ontA.nil?
                        - ontAcroA = ontA.acronym
                        - ontAcroB = clsB["links"]["ontology"]
                      - good_count += 1
                      %tr
                        %td
                          - mapStr = "#{clsA[:prefLabel]} (#{ontAcroA}) <=> #{clsB[:prefLabel]} (#{ontAcroB})"
                          -# Don't link to map.id, it is a linked-data URI.
                          -# Use a relative UI link to the first class in the mapping.
                          - mapLnk = clsA["links"]["ui"].gsub(/^.*\/ontologies/,'/ontologies') + '#mappings'
                          = link_to mapStr, mapLnk
                          %br/
                          %span{:style => "color:#AAAAAA"}
                            = mapProc.name || 'BioPortal UI'
                            = xmldatetime_to_date(mapProc.date)
                            by
                            = mapProc.creator.gsub(/.*\//,'')
                    - rescue => e
                      - LOG.add :error, e.message, e.backtrace.join("\n\t")
                      - next
        - if !$ENABLE_SLICES.nil? && $ENABLE_SLICES == true && !at_slice?
          %fieldset
            %legend Slices
            %table.minimal{:style => "width:100%"}
              %tbody
                - LinkedData::Client::Models::Slice.all.each_with_index do |slice, index|
                  - break if index == 10
                  - slice_name = "#{slice.name} (#{slice.acronym})"
                  - slice_link = "http://#{slice.acronym}.#{$UI_URL.sub("http://", "")}"
                  %tr
                    %td
                      = link_to slice_name, slice_link
%div{style: "padding: 3.5em 0 0; text-align: center;"}
  %span With the collaboration of
  %div
    %a{href: "http://www.bioontology.org", style: "text-decoration:none;"}
      %img{src: "http://www.bioontology.org/sites/all/themes/bioontology/logo.png"} &nbsp;

- ont_names = @ontologies.map{|ont| "[\"#{ont.name} (#{ont.acronym})\",\"#{ont.acronym}\"]"}

:javascript
  function jumpToValueOntology() {
    var ontology = jQuery("#find_ontology")[0].value;
    var ontology_id = jQuery("#find_ontology_id").val();

    if (ontology_id == null || ontology_id == "") {
      // didnt pick an ont
      alert("The ontology does not exist. You must pick an ontology from the list.")

      return false;
    }

    if (!!ontology_id) {
      var sValue = jQuery("#find_ontology_id").val();
      if (sValue == null || sValue == "") {
        sValue = data;
      }
      document.location="/ontologies/"+sValue;
      jQuery.blockUI({ message: '<h1>#{image_tag("jquery.simple.tree/spinner.gif")} Loading Ontology...</h1>' });
      return;
    }
  }

  function formatResultOntologySearch(value, data) {
    jQuery("#find_ontology_id").val("");
    var specials = new RegExp("[.*+?|()\\[\\]{}\\\\]", "g"); // .*+?|()[]{}\
    var keywords = jQuery("#find_ontology").val().replace(specials, "\\$&").split(' ').join('|');
    var regex = new RegExp( '(' + keywords + ')', 'gi' );
    return value.replace(regex, "<b><span style='color:#006600;'>$1</span></b>");
  }

  function jumpToValueResource(){
    var cls = jQuery("#find_resource")[0].value;
    var data = jQuery('body').data("resource_results");

    if (data == null) {
      // Im doing a search

      var search = confirm("Press OK to Search for resources using the concept, or Cancel to select a concept")
      if (search) {
        query = jQuery("#find_resource").val();
        document.location="/resource_index";
        return;
      }
    }

    if (!!data) {
      var concept_id = data[0];
      var ontology_version_id = data[2];
      var ontology_id = data[7];
      var full_ontology_id = jQuery(document).data().bp.config.rest_url + "/ontologies/" + ontology_id;
      window.location = "/resource_index/resources?classes[" + encodeURIComponent(full_ontology_id) + "]=" + encodeURIComponent(concept_id);
      return;
    }
  }

  function formatItemResource(value, data) {
    jQuery('body').data("resource_results", null);
    var specials = new RegExp("[.*+?|()\\[\\]{}\\\\]", "g"); // .*+?|()[]{}\
    var keywords = jQuery("#find_resource").val().replace(specials, "\\$&").split(' ').join('|');
    var regex = new RegExp( '(' + keywords + ')', 'gi' );

    // data[7] is the ontology_id, only included when searching multiple ontologies
    if (data[6] == undefined) {
      var result = value.replace(regex, "<b><span style='color:#006600;'>$1</span></b>") + " <span style='font-size:9px;color:blue;'>(" + data[1] + ")</span>";
    } else {
      var result = value.replace(regex, "<b><span style='color:#006600;'>$1</span></b>") + " <span style='font-size:9px;color:blue;'>(" + data[1] + ")</span>" + "<span style='color:grey;font-size:7pt;'> from: " + data[6] + "</span>";
    }

    return result;
  }

  // We use this in conjunction with autocomplete because autocomplete
  // fails when there are multiple results with the same class name
  function selectResource(value, data) {
    jQuery('body').data("resource_results", value.data);
    jumpToValueResource();
  }

  // Sets a hidden form value that records the virtual id when a concept is chosen in the jump to
  // This is a workaround because the default autocomplete search method cannot distinguish between two
  // ontologies that have the same preferred name but different ids.
  function selectFindOntology(value, data){
    jQuery("#find_ontology_id").val(value.data[0]);
    jQuery("#find_ontology").focus();
    jumpToValueOntology();
  }

  var ontologies_array=[#{ont_names.join(",")}];

  jQuery(document).ready(function() {
    jQuery("#find_ontology").autocomplete({
      selectFirst: true,
      data: ontologies_array,
      minChars: 1,
      matchSubset: 1,
      maxItemsToShow: 20,
      delay: 1,
      showResult: formatResultOntologySearch,
      onItemSelect: selectFindOntology
    });

    jQuery("#find_resource").autocomplete({
      selectFirst: true,
      url: "/search/json_search/",
      extraParams: { separator: "\n" },
      cacheLength: 1,
      maxCacheLength: 1,
      matchSubset: 0,
      minChars: 3,
      maxItemsToShow: 20,
      showResult: formatItemResource,
      onItemSelect: selectResource
    });

    jQuery('ul.sf-menu').superfish({
      animation: {height:'show'},   // slide-down effect without fade-in
      delay:     1200               // 1.2 second delay on mouseout);
    });

  });


  function greybox(box){

    if(jQuery(box).hasClass("greyed")){
      jQuery(box).removeClass('greyed');
      jQuery(box).val("");
    }
  }


